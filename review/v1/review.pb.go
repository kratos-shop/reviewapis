// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v6.30.2
// source: review/v1/review.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建评价请求
type CreateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrderId      int64  `protobuf:"varint,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Score        int32  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	ServiceScore int32  `protobuf:"varint,4,opt,name=serviceScore,proto3" json:"serviceScore,omitempty"`
	ExpressScore int32  `protobuf:"varint,5,opt,name=expressScore,proto3" json:"expressScore,omitempty"`
	Content      string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	PicInfo      string `protobuf:"bytes,7,opt,name=picInfo,proto3" json:"picInfo,omitempty"`
	VideoInfo    string `protobuf:"bytes,8,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	StoreId      int64  `protobuf:"varint,9,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Anonymous    int32  `protobuf:"varint,10,opt,name=anonymous,proto3" json:"anonymous,omitempty"`
}

func (x *CreateReviewRequest) Reset() {
	*x = CreateReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRequest) ProtoMessage() {}

func (x *CreateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReviewRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateReviewRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CreateReviewRequest) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CreateReviewRequest) GetServiceScore() int32 {
	if x != nil {
		return x.ServiceScore
	}
	return 0
}

func (x *CreateReviewRequest) GetExpressScore() int32 {
	if x != nil {
		return x.ExpressScore
	}
	return 0
}

func (x *CreateReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReviewRequest) GetPicInfo() string {
	if x != nil {
		return x.PicInfo
	}
	return ""
}

func (x *CreateReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

func (x *CreateReviewRequest) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CreateReviewRequest) GetAnonymous() int32 {
	if x != nil {
		return x.Anonymous
	}
	return 0
}

// 创建评价回复
type CreateReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateReviewReply) Reset() {
	*x = CreateReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewReply) ProtoMessage() {}

func (x *CreateReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewReply.ProtoReflect.Descriptor instead.
func (*CreateReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReviewReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 回复评价请求
type ReplyReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewId  int64  `protobuf:"varint,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	StoreId   int64  `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	PicInfo   string `protobuf:"bytes,4,opt,name=picInfo,proto3" json:"picInfo,omitempty"`
	VideoInfo string `protobuf:"bytes,5,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
}

func (x *ReplyReviewRequest) Reset() {
	*x = ReplyReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyReviewRequest) ProtoMessage() {}

func (x *ReplyReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyReviewRequest.ProtoReflect.Descriptor instead.
func (*ReplyReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{2}
}

func (x *ReplyReviewRequest) GetReviewId() int64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *ReplyReviewRequest) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ReplyReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyReviewRequest) GetPicInfo() string {
	if x != nil {
		return x.PicInfo
	}
	return ""
}

func (x *ReplyReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

// 评价回复响应
type ReplyReviewResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReplyReviewResp) Reset() {
	*x = ReplyReviewResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyReviewResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyReviewResp) ProtoMessage() {}

func (x *ReplyReviewResp) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyReviewResp.ProtoReflect.Descriptor instead.
func (*ReplyReviewResp) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyReviewResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 申诉评价请求
type AppealReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewId  int64  `protobuf:"varint,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	StoreId   int64  `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	PicInfo   string `protobuf:"bytes,4,opt,name=picInfo,proto3" json:"picInfo,omitempty"`
	VideoInfo string `protobuf:"bytes,5,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
}

func (x *AppealReviewRequest) Reset() {
	*x = AppealReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealReviewRequest) ProtoMessage() {}

func (x *AppealReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealReviewRequest.ProtoReflect.Descriptor instead.
func (*AppealReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{4}
}

func (x *AppealReviewRequest) GetReviewId() int64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *AppealReviewRequest) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *AppealReviewRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AppealReviewRequest) GetPicInfo() string {
	if x != nil {
		return x.PicInfo
	}
	return ""
}

func (x *AppealReviewRequest) GetVideoInfo() string {
	if x != nil {
		return x.VideoInfo
	}
	return ""
}

// 申诉评价响应
type AppealReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AppealReviewReply) Reset() {
	*x = AppealReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealReviewReply) ProtoMessage() {}

func (x *AppealReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealReviewReply.ProtoReflect.Descriptor instead.
func (*AppealReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{5}
}

func (x *AppealReviewReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 运营申诉评价请求
type OperationAppealReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppealId     int64  `protobuf:"varint,1,opt,name=appealId,proto3" json:"appealId,omitempty"`
	ReviewId     int64  `protobuf:"varint,2,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	StoreId      int64  `protobuf:"varint,3,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Status       int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AppealReason string `protobuf:"bytes,5,opt,name=appealReason,proto3" json:"appealReason,omitempty"`
}

func (x *OperationAppealReviewRequest) Reset() {
	*x = OperationAppealReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationAppealReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationAppealReviewRequest) ProtoMessage() {}

func (x *OperationAppealReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationAppealReviewRequest.ProtoReflect.Descriptor instead.
func (*OperationAppealReviewRequest) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{6}
}

func (x *OperationAppealReviewRequest) GetAppealId() int64 {
	if x != nil {
		return x.AppealId
	}
	return 0
}

func (x *OperationAppealReviewRequest) GetReviewId() int64 {
	if x != nil {
		return x.ReviewId
	}
	return 0
}

func (x *OperationAppealReviewRequest) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *OperationAppealReviewRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OperationAppealReviewRequest) GetAppealReason() string {
	if x != nil {
		return x.AppealReason
	}
	return ""
}

// 运营申诉评价响应
type OperationAppealReviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OperationAppealReviewReply) Reset() {
	*x = OperationAppealReviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_review_v1_review_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationAppealReviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationAppealReviewReply) ProtoMessage() {}

func (x *OperationAppealReviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_review_v1_review_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationAppealReviewReply.ProtoReflect.Descriptor instead.
func (*OperationAppealReviewReply) Descriptor() ([]byte, []int) {
	return file_review_v1_review_proto_rawDescGZIP(), []int{7}
}

func (x *OperationAppealReviewReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_review_v1_review_proto protoreflect.FileDescriptor

var file_review_v1_review_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3,
	0x03, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xfe, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0f, 0xfa,
	0x42, 0x0c, 0x1a, 0x0a, 0x30, 0x01, 0x30, 0x02, 0x30, 0x03, 0x30, 0x04, 0x30, 0x05, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0xfa, 0x42, 0x0e,
	0x1a, 0x0c, 0x30, 0x01, 0x30, 0x02, 0x30, 0x03, 0x30, 0x04, 0x30, 0x05, 0x30, 0x06, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x0c,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x1a, 0x0c, 0x30, 0x01, 0x30, 0x02, 0x30, 0x03, 0x30,
	0x04, 0x30, 0x05, 0x30, 0x06, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x07, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22,
	0x0c, 0x10, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x01, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x7f, 0x20, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52,
	0x07, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f,
	0x20, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa,
	0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x00,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x01, 0x18, 0xe8, 0x07, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x23, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x1c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x08, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0xfa, 0x42, 0x0e, 0x22, 0x0c, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x7f, 0x20, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x22, 0x04, 0x10, 0x32, 0x20, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x1a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x32, 0xab, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x6b, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x6d, 0x0a, 0x0b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x54, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f,
	0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61,
	0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x32, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x1f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_review_v1_review_proto_rawDescOnce sync.Once
	file_review_v1_review_proto_rawDescData = file_review_v1_review_proto_rawDesc
)

func file_review_v1_review_proto_rawDescGZIP() []byte {
	file_review_v1_review_proto_rawDescOnce.Do(func() {
		file_review_v1_review_proto_rawDescData = protoimpl.X.CompressGZIP(file_review_v1_review_proto_rawDescData)
	})
	return file_review_v1_review_proto_rawDescData
}

var file_review_v1_review_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_review_v1_review_proto_goTypes = []interface{}{
	(*CreateReviewRequest)(nil),          // 0: api.review.v1.CreateReviewRequest
	(*CreateReviewReply)(nil),            // 1: api.review.v1.CreateReviewReply
	(*ReplyReviewRequest)(nil),           // 2: api.review.v1.ReplyReviewRequest
	(*ReplyReviewResp)(nil),              // 3: api.review.v1.ReplyReviewResp
	(*AppealReviewRequest)(nil),          // 4: api.review.v1.AppealReviewRequest
	(*AppealReviewReply)(nil),            // 5: api.review.v1.AppealReviewReply
	(*OperationAppealReviewRequest)(nil), // 6: api.review.v1.OperationAppealReviewRequest
	(*OperationAppealReviewReply)(nil),   // 7: api.review.v1.OperationAppealReviewReply
}
var file_review_v1_review_proto_depIdxs = []int32{
	0, // 0: api.review.v1.Review.CreateReview:input_type -> api.review.v1.CreateReviewRequest
	2, // 1: api.review.v1.Review.ReplyReview:input_type -> api.review.v1.ReplyReviewRequest
	4, // 2: api.review.v1.Review.AppealReview:input_type -> api.review.v1.AppealReviewRequest
	6, // 3: api.review.v1.Review.OperationAppealReview:input_type -> api.review.v1.OperationAppealReviewRequest
	1, // 4: api.review.v1.Review.CreateReview:output_type -> api.review.v1.CreateReviewReply
	3, // 5: api.review.v1.Review.ReplyReview:output_type -> api.review.v1.ReplyReviewResp
	5, // 6: api.review.v1.Review.AppealReview:output_type -> api.review.v1.AppealReviewReply
	7, // 7: api.review.v1.Review.OperationAppealReview:output_type -> api.review.v1.OperationAppealReviewReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_review_v1_review_proto_init() }
func file_review_v1_review_proto_init() {
	if File_review_v1_review_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_review_v1_review_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyReviewResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationAppealReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_review_v1_review_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationAppealReviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_review_v1_review_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_review_v1_review_proto_goTypes,
		DependencyIndexes: file_review_v1_review_proto_depIdxs,
		MessageInfos:      file_review_v1_review_proto_msgTypes,
	}.Build()
	File_review_v1_review_proto = out.File
	file_review_v1_review_proto_rawDesc = nil
	file_review_v1_review_proto_goTypes = nil
	file_review_v1_review_proto_depIdxs = nil
}
